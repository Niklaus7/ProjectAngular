iComissionapp.controller('IndexController', function ($scope, $http, $location, $log, $rootScope, $compile) 
{

	//....................validation start...............
	$scope.onlytext = '^[a-zA-Z._ -,]+$';
	$scope.onlynumber = '^[0-9]+$';
	//....................validation end................

	$scope.Keywords = '';
	$scope.KeywordsAd = '';
	$scope.Type = "";
	$scope.LoadData = function (type) 
	{
		
		if(type == "No"){
		$rootScope.loadcities();
		}

		var allStates = "";
		$http.get('iComissionAdmin/PHP/Get_skills.php', {
			cache: true
		}).then(function (response) {
			console.log(response.data);
			$scope.items = response.data;
			
			var allStatesc = response.data;

		});

		var allStates = "";
		$http.get('iComissionAdmin/PHP/Get_Assignments.php', {
			cache: true
		}).then(function (response) {
			console.log(response.data);
			$scope.items1 = response.data;
			
			var allStatescd = response.data;

		});


		if(type == "Yes"){
			$('.cssload-container').delay(300).show();
		}
		else{
			$("#overl").show();
		}

		$('.selectpicker').selectpicker();
		$scope.Type = "Jobs";

		
			
			$http.post("iComissionAdmin/PHP/Get_JobLocation.php").then(function (response) {
				$scope.JobLocationList = response.data.JobLocation;
				$scope.JobIndustryList = response.data.JobIndustry;
	
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
		
			$http.post("iComissionAdmin/PHP/Get_ProjectLocation.php").then(function (response) 
			{
				$scope.ProjectTypeList = response.data.ProjectType;
				$scope.ProjectLocationList = response.data.ProjectLocation;
	
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
	
			
			$http.post("iComissionAdmin/PHP/Get_ProjectLocation.php").then(function (response) 
			{
				$scope.ProjectTypeList = response.data.ProjectType;
				$scope.ProjectLocationList = response.data.ProjectLocation;
	
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
	
			$http.post("iComissionAdmin/PHP/Get_JobLocation.php").then(function (response) {
				$scope.JobLocationList = response.data.JobLocation;
				$scope.JobIndustryList = response.data.JobIndustry;
	
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
		
		

		if (localStorage.getItem('UserRoleName') == "User") 
		{
			document.getElementById("Job-Assignment").style.display="none";
			document.getElementById("Job").style.display="block";

			$scope.Type = "Jobs";
			$("#FeaturedProjects").remove();
			document.getElementById("FilterButton").style.display="none";
			$http.post("iComissionAdmin/PHP/Get_JobList.php", {
				'jobPostedBy': 'null',
				'ShowData': 'All'

			}).then(function (response) {
				console.log(response.data);
				$scope.All_JobList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
		}
		else if (localStorage.getItem('UserRoleName') == "AssignmentSeeker" || localStorage.getItem('UserRoleName') == "SME" || localStorage.getItem('UserRoleName') == "Vendor" || localStorage.getItem('UserRoleName') == "Consultant") 
		{
			document.getElementById("Job-Assignment").style.display="none";
			document.getElementById("Assignment").style.display="block";

			$scope.Type = "Projects";
			$('#carousel-example-generic').carousel(1);
			$("#FeaturedJobs").remove();
			document.getElementById("FilterButton").style.display="none";
			
			$http.post("iComissionAdmin/PHP/Get_ProjectList.php", {
				'ProjectPostedBy': 'null',
				'ShowData': 'All',
				'UserId': localStorage.getItem('EndUserAccountID'),
			}).then(function (response) {
				console.log(response.data);
				$scope.All_ProjectList = "";
				$scope.All_ProjectList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
		}
		else 
		{
			
			/*$scope.Type = "Jobs";
			$http.post("iComissionAdmin/PHP/Get_JobList.php", {
				'jobPostedBy': 'null',
				'ShowData': 'All'
			}).then(function (response) {
				console.log(response.data);
				$scope.All_JobList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});*/
			$scope.Type = "Projects";
			$('#carousel-example-generic').carousel(1);
			$("#FeaturedJobs").remove();
			$http.post("iComissionAdmin/PHP/Get_ProjectList.php", {
				'ProjectPostedBy': 'null',
				'ShowData': 'All',
				'UserId': localStorage.getItem('EndUserAccountID'),
			}).then(function (response) {
				console.log(response.data);
				$scope.All_ProjectList = "";
				$scope.All_ProjectList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
		}

		if (localStorage.getItem("searchtype") == "Advanced") {
			$("#DefaultSearch").slideUp('fast');
			document.getElementById('AdvanceSearch').style.display = "block";
		}
		if(type == "Yes"){
		  	$('.cssload-container').delay(300).fadeOut('slow');
		}
		else{
			$("#overl").hide();
		}
		//make_blank();
	}

	
		var invoke_make_blank = true;
	function make_blank()
	{
		if (invoke_make_blank)
		{
			introJs().start();
			invoke_make_blank = false;
		}
	}

	$rootScope.loadcities = function(){
		var options = {
            types: ['(cities)']
        };

        var input = document.getElementById('Serach_joblocation');
        // var autocomplete = new google.maps.places.Autocomplete(input, options);

        var places = new google.maps.places.Autocomplete(input);
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
			var address = place.formatted_address;
			
            var address = "", city = "", state = "", zip = "", country = "", formattedAddress = "";

            for (var i = 0; i < place.address_components.length; i++) {
                var addr = place.address_components[i];
                // check if this entry in address_components has a type of country
                if (addr.types[0] == 'country')
                    country = addr.long_name;
                else if (addr.types[0] == 'street_address') // address 1
                    address = address + addr.long_name;
                else if (addr.types[0] == 'establishment')
                    address = address + addr.long_name;
                else if (addr.types[0] == 'route')  // address 2
                    address = address + addr.long_name;
                else if (addr.types[0] == 'postal_code')       // Zip
                    zip = addr.short_name;
                else if (addr.types[0] == ['administrative_area_level_1'])       // State
                    state = addr.long_name;
                else if (addr.types[0] == ['locality'])       // City
                    city = addr.long_name;
			}
			if(city == null || city == ""){
				city = country;
			}
            var location = place.geometry.location;

            lat = location.lat();
			lng = location.lng();

			localStorage.setItem("selectedcity",city);
			localStorage.setItem("selectedlat",lat);
			localStorage.setItem("selectedlng",lng);
			localStorage.setItem("selectedfromplace","Yes");
		});
	}

	$rootScope.searchdata = function () 
	{
		
		var address = document.getElementById('Serach_joblocation').value;
		localStorage.setItem("joblocation",address);
		if (address != "") 
		{
			if (localStorage.getItem("selectedfromplace")) {

				$http.post("iComissionAdmin/PHP/Get_JobProjectData.php", {
					'Location': localStorage.getItem("joblocation")
				}).then(function (response) {
					console.log(response.data);
					if (response.data != "error") {
						$scope.All_JobList = response.data;
						$scope.All_JobList_Map = response.data.Jobdata;
						$scope.All_ProjectList_Map = response.data.Projectdata;
						$scope.Joblength = response.data.Jobdata.length;
						$scope.Projectlength = response.data.Projectdata.length;
						$scope.loadMap("No");
						// localStorage.removeItem("selectedcity");
						// localStorage.removeItem("selectedlat");
						// localStorage.removeItem("selectedlng");
						//localStorage.removeItem("selectedfromplace");
					}
					else {
						$scope.loadblankmap(localStorage.getItem("selectedlat"), localStorage.getItem("selectedlng"));
						//localStorage.removeItem("selectedfromplace");
					}
					$('.cssload-container').delay(300).fadeOut('slow');
				}, function (error) {
					console.log("Sorry! Data Couldn't be inserted!");
					console.log(error);
				});
			}
			else 
			{
				var x = document.getElementById("snackbar")
				x.innerHTML = "Please select location from placeholder";
				x.className = "show";
				setTimeout(function () {
					x.className = x.className.replace("show", "");
				}, 3000);
			}
		}
		else 
		{
			var x = document.getElementById("snackbar")
			x.innerHTML = "Please select location";
			x.className = "show";
			setTimeout(function () {
				x.className = x.className.replace("show", "");
			}, 3000);
		}
	}
	
	$rootScope.GetJobProjecfrmCurrntlocation = function (type) 
	{

		//if (navigator.geolocation) 
		//{
           navigator.geolocation.getCurrentPosition(function (p) {
			var lat = p.coords.latitude;
			var lng = p.coords.longitude;
			var latlng = new google.maps.LatLng(lat, lng);
			alert(latlng);
			var geocoder = geocoder = new google.maps.Geocoder();
			geocoder.geocode({ 'latLng': latlng }, function (results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					if (results[0]) {
						//alert("Location: " + results[1].formatted_address);
						var address = "", city = "", state = "", zip = "", country = "", formattedAddress = "";
	
						for (var i = 0; i < results[0].address_components.length; i++) {
							var addr = results[0].address_components[i];
							// check if this entry in address_components has a type of country
							if (addr.types[0] == 'country')
								country = addr.long_name;
							else if (addr.types[0] == 'street_address') // address 1
								address = address + addr.long_name;
							else if (addr.types[0] == 'establishment')
								address = address + addr.long_name;
							else if (addr.types[0] == 'route')  // address 2
								address = address + addr.long_name;
							else if (addr.types[0] == 'postal_code')       // Zip
								zip = addr.short_name;
							else if (addr.types[0] == ['administrative_area_level_1'])       // State
								state = addr.long_name;
							else if (addr.types[0] == ['locality'])       // City
								city = addr.long_name;
						}
						//alert(city+country);
						localStorage.setItem('GeoLocation',city+', '+state+', '+country);						
						$http.post("iComissionAdmin/PHP/Get_JobProjectData.php", {
							'Location': city
						}).then(function (response) {
							console.log(response.data);
							if (response.data != "error") 
							{
								if (localStorage.getItem('UserRoleName') == "User") 
								{
									$scope.All_JobList = response.data;
									$scope.All_JobList_Map = response.data.Jobdata;
								
									$scope.Joblength = response.data.Jobdata.length;
								
									$scope.loadMap(type);
								}
								else if (localStorage.getItem('UserRoleName') == "AssignmentSeeker") 
								{
									$scope.All_JobList = response.data;
									
									$scope.All_ProjectList_Map = response.data.Projectdata;
								
									$scope.Projectlength = response.data.Projectdata.length;
									$scope.loadMap(type);
								}
								else
								{
									$scope.All_JobList = response.data;
									$scope.All_JobList_Map = response.data.Jobdata;
									$scope.All_ProjectList_Map = response.data.Projectdata;
									$scope.Joblength = response.data.Jobdata.length;
									$scope.Projectlength = response.data.Projectdata.length;
									$scope.loadMap(type);
								}
								
							}
							else 
							{
								$scope.loadblankmap(lat, lng);
								// $scope.All_JobList = "";
								// $("#job_view").hide();
							}
							$('.cssload-container').delay(300).fadeOut('slow');
						}, function (error) {
							console.log("Sorry! Data Couldn't be inserted!");
							console.log(error);
						});
					}
				}
			});

           });
		//} 
		//else 
		//{
          // alert('Geo Location feature is not supported in this browser.');
       // }

       
    }

	$scope.showJob = function()
	{
		$scope.Type = "Jobs";
		
		//$("#FeaturedProjects").remove();
			$http.post("iComissionAdmin/PHP/Get_JobList.php", {
				'jobPostedBy': 'null',
				'ShowData': 'All'
			}).then(function (response) {
				console.log(response.data);
				$scope.All_JobList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
	}
	$scope.showProject = function()
	{
		
			$scope.Type = "Projects";
		
			//$("#FeaturedJobs").remove();
			
			$http.post("iComissionAdmin/PHP/Get_ProjectList.php", {
				'ProjectPostedBy': 'null',
				'ShowData': 'All',
				'UserId': localStorage.getItem('EndUserAccountID'),
			}).then(function (response) {
				console.log(response.data);
				$scope.All_ProjectList = "";
				$scope.All_ProjectList = response.data;
			}, function (error) {
				console.log("Sorry! Data Couldn't be inserted!");
				console.log(error);
			});
	}

    $scope.loadblankmap = function (lat, lng) {
        var mapOptions = {
            center: new google.maps.LatLng(lat, lng),
            zoom: 10,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);


        var styledMapType = new google.maps.StyledMapType(
            [
                {
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#2f2a2c"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "featureType": "administrative.land_parcel",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#bdbdbd"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#fba86f"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#dadada"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#2f2a2c"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "transit.station",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#bbdefb"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                }
            ],
            { name: 'Styled Map' });

        map.mapTypes.set('styled_map', styledMapType);
        map.setMapTypeId('styled_map');

        var x = document.getElementById("snackbar")
       // x.innerHTML = "No Jobs or assignments found";
      //  x.className = "show";
        setTimeout(function () {
            x.className = x.className.replace("show", "");
        }, 3000);
    }

    var marker;
    var markers = [];
    var marker1;
    var markers1 = [];
    $scope.loadMap = function (type) {
        var mapOptions = {
            zoom: 10,
            mapTypeControlOptions: {
                mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain',
                    'styled_map']
            },
        }
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        var JobsData = [];

        for (var i = 0; i < $scope.Joblength; i++) {
            JobsData[i] = [$scope.All_JobList_Map[i].lat, $scope.All_JobList_Map[i].lng, $scope.All_JobList_Map[i].CompanyName, $scope.All_JobList_Map[i].JobTitle, $scope.All_JobList_Map[i].MinSal, $scope.All_JobList_Map[i].MaxSal, $scope.All_JobList_Map[i].JobPostID, $scope.All_JobList_Map[i].JobPostedBy, $scope.All_JobList_Map[i].CompanyURL, $scope.All_JobList_Map[i].MinExp, $scope.All_JobList_Map[i].MaxExp];
        }

        var styledMapType = new google.maps.StyledMapType(
            [
                {
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#2f2a2c"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "featureType": "administrative.land_parcel",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#bdbdbd"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#fba86f"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#dadada"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#2f2a2c"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "transit.station",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#bbdefb"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                }
            ],
            { name: 'Styled Map' });

        map.mapTypes.set('styled_map', styledMapType);
        map.setMapTypeId('styled_map');

        // google.maps.event.trigger(map, 'resize');

        var bounds = new google.maps.LatLngBounds();

        var marker, i;
        var infowindow = new google.maps.InfoWindow();


        google.maps.event.addListener(map, 'click', function () {
            infowindow.close();
        });

        var markerIconj = {
            url: 'images/pin_j.png',
            scaledSize: new google.maps.Size(40, 40),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(32, 65),
            labelOrigin: new google.maps.Point(20, 15)
        }
        for (i = 0; i < JobsData.length; i++) {

            var p = JobsData[i];
            var latlng = new google.maps.LatLng(p[0], p[1]);
			bounds.extend(latlng);
			
            marker = new google.maps.Marker({
                position: latlng,
                map: map,
                CompanyName: p[2],
                JobTitle: p[3],
                MinSal: p[4],
                MaxSal: p[5],
                JobPostID: p[6],
                JobPostedBy: p[7],
				CompanyURL: p[8],
				MinExp: p[9],
                MaxExp: p[10],
                animation: google.maps.Animation.BOUNCE,
				icon: markerIconj,
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
					$scope.JobPostsID = this.JobPostID;
					var div = document.createElement('DIV');

                    div.innerHTML = '<div class="col-sm-12" style="width:auto; padding: 5px !important">' +
					'<div class="col-md-3 col-sm-3 col-xs-3" style="padding: 0px !important">' +
					'<div class="post-media">' +
					'<a href>' +
					'<img src="iComissionAdmin/php/CompanyLogo/5a1fd1727c629.png" alt="" class="img-responsive img-thumbnail" style="width: 60px;height: 60px;">' +
					'</a>' +
					'</div>' +
					'</div>' +
					'<div class="col-md-9 col-sm-9 col-xs-9" style="padding-left: 10px !important;padding-right: 0px;">' +
					// '<h5 style="margin: 5px 0 !important;">' +
					'<div class="text-wrapp">' + this.JobTitle + '</div>' +
					// '</h5>' +
					'<small>' +
					'<span style="color: #ff6700 !important; font-size: 14px;" class="text-danger"><b>Salary: </b>' +
					'<a href style="color: #ff6700 !important;"><i class="fa fa-usd"></i><b> ' + this.MinSal + ' to ' + this.MaxSal + '</b></a>' +
					'</span>' +
					'</small>' +
					'<br/><small>' +
					'<span class="text-danger" style="color: #2f2a2c !important; font-size: 10px"><b>Experience: ' + this.MinExp + ' - ' + this.MaxExp + ' Years</b>' +
					'<br><button class="btn btn-primary pull-right cstmbtncls" ng-click="getJobID(' + this.JobPostID + ')" style="padding-right: 5px; font-size: 12px">View</button>' +
					'</span>' +
					'</small>' +
					'</div>' +
					'</div>';

                    $compile(div)($scope);

                    infowindow.setContent(div);
                    // infowindow.setContent(this.title);
                    infowindow.open(map, marker);
                }
            })(marker, i));

			markers = [];
            markers.push(marker);
		}
		var markerCluster1 = new MarkerClusterer(map, markers,
            {imagePath: 'https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclusterer/images/m'}
        );

		var ProjectsData = [];
		
		var markerIcona = {
            url: 'images/pin_a.png',
            scaledSize: new google.maps.Size(40, 40),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(32, 65),
            labelOrigin: new google.maps.Point(20, 15)
        }

        for (var i = 0; i < $scope.Projectlength; i++) {
            ProjectsData[i] = [$scope.All_ProjectList_Map[i].lat, $scope.All_ProjectList_Map[i].lng, $scope.All_ProjectList_Map[i].CompanyName, $scope.All_ProjectList_Map[i].ProjectName, $scope.All_ProjectList_Map[i].ProjectBudget, $scope.All_ProjectList_Map[i].ProjectPostID, $scope.All_ProjectList_Map[i].ProjectPostBy, $scope.All_ProjectList_Map[i].CompanyURL, $scope.All_ProjectList_Map[i].ProjectStartDate];
        }
        for (i = 0; i < ProjectsData.length; i++) {
            var p = ProjectsData[i];
            var latlng = new google.maps.LatLng(p[0], p[1]);
            bounds.extend(latlng);

            marker1 = new google.maps.Marker({
                position: latlng,
                map: map,
                CompanyName: p[2],
                ProjectName: p[3],
                ProjectBudget: p[4],
                ProjectPostID: p[5],
                ProjectPostBy: p[6],
				CompanyURL: p[7],
				ProjectStartDate: p[8],
                animation: google.maps.Animation.BOUNCE,
                icon: markerIcona,
            });

            google.maps.event.addListener(marker1, 'click', (function (marker1, i) {
                return function () {
					var div = document.createElement('DIV');

                    div.innerHTML = '<div class="col-sm-12" style="width: auto; padding: 5px !important">' +
					'<div class="col-md-3 col-sm-3 col-xs-3" style="padding: 0px !important">' +
					'<div class="post-media">' +
					'<a href>' +
					'<img src="iComissionAdmin/php/CompanyLogo/5a1fd1727c629.png" alt="" class="img-responsive img-thumbnail" style="width: 60px;height: 60px;">' +
					'</a>' +
					'</div>' +
					'</div>' +
					'<div class="col-md-9 col-sm-9 col-xs-9" style="padding-left: 10px !important;padding-right: 0px;">' +
					// '<h5 style="margin: 5px 0 !important;">' +
					// '<a href style="text-overflow: ellipsis;">' + this.ProjectName + '</a>' +
					// '</h5>' +
					'<div class="text-wrapp">' + this.ProjectName + '</div>' +
					'<small>' +
					'<span style="color: #ff6700 !important; font-size: 12px;"><b>Budget: </b>' +
					'<a href style="color: #ff6700 !important;"><i class="fa fa-usd"></i> <b>' + this.ProjectBudget +'</b></a>'+
					'</span>' +
					'</small>' +
					'<br/><small>' +
					'<span class="text-danger" style="color: #2f2a2c !important; font-size: 10px"><b>Date: ' + this.ProjectStartDate +
					'<br><button class="btn btn-primary pull-right cstmbtncls" ng-click="getProjectID(' + this.ProjectPostID + ')" style="padding-right: 5px; font-size: 12px">View</button>' +
					'</span>' +
					'</small>' +
					'</div>' +
					'</div>';

                    $compile(div)($scope);

                    infowindow.setContent(div);
                    // infowindow.setContent(this.title);
                    infowindow.open(map, marker1);
                }
            })(marker1, i));
			markers1 = [];
            markers1.push(marker1);
		}
		
		var markerCluster1 = new MarkerClusterer(map, markers1,
            {imagePath: 'https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclusterer/images/m'}
        );

		map.fitBounds(bounds);

		zoomChangeBoundsListener =
			google.maps.event.addListenerOnce(map, 'bounds_changed', function (event) {
				if (this.getZoom()) {   // or set a minimum
					this.setZoom(5);  // set zoom here
				}
			});

		setTimeout(function () { google.maps.event.removeListener(zoomChangeBoundsListener) }, 2000);

		$scope.LoadData(type);
    }
	


	

	/* An InfoBox is like an info window, but it displays
	* under the marker, opens quicker, and has flexible styling.
	* @param {GLatLng} latlng Point to place bar at
	* @param {Map} map The map on which to display this InfoBox.
	* @param {Object} opts Passes configuration options - content,
	* offsetVertical, offsetHorizontal, className, height, width
	*/

	function InfoBox(opts) {
		google.maps.OverlayView.call(this);
		this.latlng_ = opts.latlng;
		this.map_ = opts.map;
		this.content = opts.content;
		this.offsetVertical_ = -195;
		this.offsetHorizontal_ = 5;
		this.height_ = 165;
		this.width_ = 266;
		var me = this;
		this.boundsChangedListener_ =
			google.maps.event.addListener(this.map_, "bounds_changed", function () {
				return me.panMap.apply(me);
			});
		// Once the properties of this OverlayView are initialized, set its map so
		// that we can display it. This will trigger calls to panes_changed and
		// draw.
		this.setMap(this.map_);
	}
	/* InfoBox extends GOverlay class from the Google Maps API
	*/
	InfoBox.prototype = new google.maps.OverlayView();
	/* Creates the DIV representing this InfoBox
	*/
	InfoBox.prototype.remove = function () {
		if (this.div_) {
			this.div_.parentNode.removeChild(this.div_);
			this.div_ = null;
		}
	};
	/* Redraw the Bar based on the current projection and zoom level
	*/
	InfoBox.prototype.draw = function () {
		// Creates the element if it doesn't exist already.
		this.createElement();
		if (!this.div_) return;
		// Calculate the DIV coordinates of two opposite corners of our bounds to
		// get the size and position of our Bar
		var pixPosition = this.getProjection().fromLatLngToDivPixel(this.latlng_);
		if (!pixPosition) return;
		// Now position our DIV based on the DIV coordinates of our bounds
		this.div_.style.width = this.width_ + "px";
		this.div_.style.left = (pixPosition.x + this.offsetHorizontal_) + "px";
		this.div_.style.height = this.height_ + "px";
		this.div_.style.top = (pixPosition.y + this.offsetVertical_) + "px";
		this.div_.style.display = 'block';
	};
	/* Creates the DIV representing this InfoBox in the floatPane. If the panes
	* object, retrieved by calling getPanes, is null, remove the element from the
	* DOM. If the div exists, but its parent is not the floatPane, move the div
	* to the new pane.
	* Called from within draw. Alternatively, this can be called specifically on
	* a panes_changed event.
	*/
	InfoBox.prototype.createElement = function () {
		var panes = this.getPanes();
		var div = this.div_;
		if (!div) {
			// This does not handle changing panes. You can set the map to be null and
			// then reset the map to move the div.
			div = this.div_ = document.createElement("div");
				div.className = "infobox"
			var contentDiv = document.createElement("div");
				contentDiv.className = "content"
				contentDiv.innerHTML = this.content;
			var closeBox = document.createElement("div");
				closeBox.className = "closecstm";
				closeBox.innerHTML = "x";
			div.appendChild(closeBox);

			function removeInfoBox(ib) {
				return function () {
					ib.setMap(null);
				};
			}
			google.maps.event.addDomListener(closeBox, 'click', removeInfoBox(this));
			div.appendChild(contentDiv);
			div.style.display = 'none';
			panes.floatPane.appendChild(div);
			this.panMap();
		} else if (div.parentNode != panes.floatPane) {
			// The panes have changed. Move the div.
			div.parentNode.removeChild(div);
			panes.floatPane.appendChild(div);
		} else {
			// The panes have not changed, so no need to create or move the div.
		}
	}
	/* Pan the map to fit the InfoBox.
	*/
	InfoBox.prototype.panMap = function () {
		// if we go beyond map, pan map
		var map = this.map_;
		var bounds = map.getBounds();
		if (!bounds) return;
		// The position of the infowindow
		var position = this.latlng_;
		// The dimension of the infowindow
		var iwWidth = this.width_;
		var iwHeight = this.height_;
		// The offset position of the infowindow
		var iwOffsetX = this.offsetHorizontal_;
		var iwOffsetY = this.offsetVertical_;
		// Padding on the infowindow
		var padX = 40;
		var padY = 40;
		// The degrees per pixel
		var mapDiv = map.getDiv();
		var mapWidth = mapDiv.offsetWidth;
		var mapHeight = mapDiv.offsetHeight;
		var boundsSpan = bounds.toSpan();
		var longSpan = boundsSpan.lng();
		var latSpan = boundsSpan.lat();
		var degPixelX = longSpan / mapWidth;
		var degPixelY = latSpan / mapHeight;
		// The bounds of the map
		var mapWestLng = bounds.getSouthWest().lng();
		var mapEastLng = bounds.getNorthEast().lng();
		var mapNorthLat = bounds.getNorthEast().lat();
		var mapSouthLat = bounds.getSouthWest().lat();
		// The bounds of the infowindow
		var iwWestLng = position.lng() + (iwOffsetX - padX) * degPixelX;
		var iwEastLng = position.lng() + (iwOffsetX + iwWidth + padX) * degPixelX;
		var iwNorthLat = position.lat() - (iwOffsetY - padY) * degPixelY;
		var iwSouthLat = position.lat() - (iwOffsetY + iwHeight + padY) * degPixelY;
		// calculate center shift
		var shiftLng =
			(iwWestLng < mapWestLng ? mapWestLng - iwWestLng : 0) +
			(iwEastLng > mapEastLng ? mapEastLng - iwEastLng : 0);
		var shiftLat =
			(iwNorthLat > mapNorthLat ? mapNorthLat - iwNorthLat : 0) +
			(iwSouthLat < mapSouthLat ? mapSouthLat - iwSouthLat : 0);
		// The center of the map
		var center = map.getCenter();
		// The new map center
		var centerX = center.lng() - shiftLng;
		var centerY = center.lat() - shiftLat;
		// center the map to the new shifted center
		map.setCenter(new google.maps.LatLng(centerY, centerX));
		// Remove the listener after panning is complete.
		google.maps.event.removeListener(this.boundsChangedListener_);
		this.boundsChangedListener_ = null;
	};






	$scope.openmodal = function (ProjectId) {
		$scope.biddamount = "";
		$scope.biddesr = "";
		document.getElementById("errormsgg").innerHTML = "";
		localStorage.setItem("ApplyProjectId",ProjectId);
		$('#ProjectApply').modal('show');
	}

	$scope.AdvanceSearch = function () {
		$("#DefaultSearch .input-group, .input-groupp, #DefaultSearch .bootstrap-select").css('border', 'none');
		$("#DefaultSearch").slideUp('fast');
		document.getElementById('AdvanceSearch').style.display = "block";
	}

	$scope.BacktoDefaultSearch = function () {
		$("#AdvanceSearch .cstm, #AdvanceSearch .bootstrap-select").css('border', 'none');
		$("#AdvanceSearch").slideUp('fast');
		document.getElementById('DefaultSearch').style.display = "block";
	}

	//call when click on job title in job list
	$scope.getJobID = function (id) {
		$('.cssload-container').delay(300).show();
		localStorage.setItem('JobID', id);
		$location.path("\JobDetails");
	}

	//call when click on applyjob button
	$scope.applytojob = function (id) {
		if (localStorage.getItem('UserAccountID') != null) {
			if (localStorage.getItem("IsRegistered") != "No") {
				$('.cssload-container').delay(300).show();
				$scope.jobApplytDateTime = new Date();
				$scope.JobSeekerID = localStorage.getItem('UserAccountID');
				//alert(id );
				$http.post("iComissionAdmin/PHP/Save_JobSeeker_ApplytoJob.php", {
					'JobID': id,
					'JobSeekerID': $scope.JobSeekerID,
					'ApplyDate': $scope.jobApplytDateTime,

				}).then(function (response) {
					console.log(response.data.EmailId);
					if (response.data.data == false) {
						swal({
							title: "Already Applied!",
							text: "You have already applied for this job post",
							type: "info"
						});
					}
					else {
						swal({
							title: "Applied Successfully!",
							text: "You have successfully applied for this job post",
							type: "success"
						});
					}
					$('.cssload-container').delay(300).fadeOut('slow');
				}, function (error) {
					console.log("Sorry! Data Couldn't be inserted!");
					console.log(error);
				});
			}
			else {
				$location.path('JobSeekersProfile');
			}
		}
		else {
			$location.path('Login');
		}
	}

	//call when click on project title in project list
	$scope.getProjectID = function (id) {
		
		$('.cssload-container').delay(300).show();
		localStorage.setItem('ProjectID', id);
		$location.path("\ProjectDetails");
	}

	//call when click on applyproject button
	$scope.applytoproject = function (isValid) {
		if (isValid) {
			var id = localStorage.getItem("ApplyProjectId");
			if (localStorage.getItem('UserAccountID') != null) {
				if (localStorage.getItem("ProfileComplete") == "No") {
					// $.Notification.autoHideNotify('info', 'top center', 'Complete your profile!','Complete profile to get extra benifits on ProcStart with jobs and projects.');
				localStorage.removeItem("ProfileComplete");
				$location.path("Profile");
				$(".modal-backdrop").remove();
				}
				else {
				$('.cssload-container').delay(300).show();
				$scope.ProjectApplytDateTime = new Date();
				$scope.ProjectSeekerID = localStorage.getItem('UserAccountID');
				//alert(id );
				$http.post("iComissionAdmin/PHP/Save_ProjectSeeker_ApplytoJob.php", {
					'ProjectID': id,
					'ProjectSeekerID': $scope.ProjectSeekerID,
					'ApplyDate': $scope.ProjectApplytDateTime,
					'Biddamount': $scope.biddamount,
					'Biddesr': $scope.biddesr,
				}).then(function (response) {
					console.log(response.data);
					if (response.data.data == false) {
						swal({
							title: "Already Applied!",
							text: "You have already applied for this Assignment post",
							type: "info"
						});
					}
					else {
						swal({
							title: "Applied Successfully!",
							text: "You have successfully applied for this Assignment post",
							type: "success"
						});
					}
					$('#ProjectApply').modal('hide');
					$('.cssload-container').delay(300).fadeOut('slow');
				}, function (error) {
					console.log("Sorry! Data Couldn't be inserted!");
					console.log(error);
				});
			}
			}
			else {
				$location.path('Login');
			}
		}
		else {
			document.getElementById("errormsgg").innerHTML = "Please enter all data";
		}
	}

	//call when click on search button
	$scope.serch_job = function () 
	{
		//alert($("#Serach_joblocation").val());

		/*change--1*/
			if($("#Serach_joblocation").val() != "")
			{
				localStorage.setItem("joblocation", $("#Serach_joblocation").val());
				localStorage.setItem("Experience", document.getElementById("Experience").value);
				localStorage.setItem("Salary", document.getElementById("Salary").value);
				localStorage.setItem("keywords", $scope.Keywords);
				localStorage.setItem("searchtype", "Default");
				//$location.path("\JobSearch");
			}
			else
			{
				localStorage.setItem("joblocation",'null');
				localStorage.setItem("Experience", document.getElementById("Experience").value);
				localStorage.setItem("Salary", document.getElementById("Salary").value);
				localStorage.setItem("keywords", $scope.Keywords);
				localStorage.setItem("searchtype", "Default");
				//$location.path("\JobSearch");
			}
			
		/*change--1*/

		/* commnet--1 
			if ($scope.Keywords != "" && $("#Serach_joblocation").val() != "" && document.getElementById("Experience").value != "Exp in Year" && document.getElementById("Salary").value != "Salary in Lakh") 
			{
				$('.cssload-container').delay(300).show();
				if ($("#Serach_joblocation").val() != null) {
					localStorage.setItem("joblocation", $("#Serach_joblocation").val());
				}
				else {
					localStorage.setItem("joblocation", $("#Serach_joblocation").val());
				}
				localStorage.setItem("Experience", document.getElementById("Experience").value);
				localStorage.setItem("Salary", document.getElementById("Salary").value);
				localStorage.setItem("keywords", $scope.Keywords);
				localStorage.setItem("searchtype", "Default");

				$location.path("\JobSearch");
			}
			else {
				// $("#DefaultSearch .input-group, #DefaultSearch .input-groupp").css('border', '1px solid #8a1f11');
				// $(".SearchJob").effect("shake", { direction: "up", times: 4, distance: 5 }, 1000);

				
					var x = document.getElementById("snackbar")
					x.innerHTML = "Please enter all data";
					x.className = "show";
					setTimeout(function () {
						x.className = x.className.replace("show", "");
					}, 3000);
				
			}
		comment--1*/
	}

	//call when click on advance search button
	$scope.Advanceserch_job = function () {
		if ($scope.KeywordsAd != "" && ($("#jobindustry").val() != "" || $.trim($("#jobindustry").val()) != "Industry") && $("#joblocation").val() != "" && document.getElementById("ExperienceAd").value != "Exp in Year" && document.getElementById("SalaryAd").value != "Salary in Lakh") {
			$('.cssload-container').delay(300).show();
			if ($("#joblocation").val() != null) {
				localStorage.setItem("joblocationAd", $("#joblocation").val());
			}
			else {
				localStorage.setItem("joblocationAd", $("#joblocation").val());
			}
			if ($("#jobindustry").val() != null) {
				localStorage.setItem("jobindustryAd", $.trim($("#jobindustry").val()));
			}
			else {
				localStorage.setItem("jobindustryAd", $("#jobindustry").val());
			}

			localStorage.setItem("ExperienceAd", document.getElementById("ExperienceAd").value);
			localStorage.setItem("SalaryAd", document.getElementById("SalaryAd").value);
			localStorage.setItem("KeywordsAd", $scope.KeywordsAd);
			localStorage.setItem("searchtype", "Advanced");

			$location.path("\JobSearch");
		}
		else {
			$("#AdvanceSearch .cstm, #AdvanceSearch .bootstrap-select").css('border', '1px solid #8a1f11');
			$(".SearchJob").effect("shake", { direction: "up", times: 4, distance: 5 }, 1000);
		}
	}

	//call when click on create alert button
	$scope.create_JobAlert = function (isValid) {

		if (isValid) {
			if ($("#alertpreference").val() != "Select alert Preference") {
				$http.post("iComissionAdmin/PHP/Save_JobSeeker_Alert.php", {
					'UserID': localStorage.getItem('UserAccountID'),
					'JobalertName': $scope.JobalertName,
					'skills': $scope.skills,
					'location': $scope.location,
					'MinExp': $scope.MinExp,
					'MaxExp': $scope.MaxExp,
					'salary': $scope.salary,
					'industry': $scope.industry,
					'preference': $("#alertpreference").val(),
				}).then(function (response) {
					if (response.data != "error") {
						$("#CreateJobAlert").slideUp('fast');
						document.getElementById('div_success').style.display = "block";
					}
				}, function (error) {
					console.log("Sorry! Data Couldn't be inserted!");
					console.log(error);
				});
			}
			else {
				document.getElementById("errormsg").innerHTML = "Please select alert preference";
			}
		}
		else {
			document.getElementById("errormsg").innerHTML = "Please enter all data";
		}
	}

	$scope.search_Project = function () 
	{
		if($("#Serach_joblocation").val() != "")
		{
			var budget = $.trim($("#Budget").val());
			var MinBudget = 0,
				MaxBudget = 0;
			if (budget == "Less than $500") {
				MinBudget = 0;
				MaxBudget = 500;
			} else if (budget == "$501 to $5000") {
				MinBudget = 501;
				MaxBudget = 5000;
			} else if (budget == "$5001-$10000") {
				MinBudget = 5001;
				MaxBudget = 10000;
			} else if (budget == "Above") {
				MinBudget = 10001;
				MaxBudget = 100000;
			}

			localStorage.setItem("ProjKeywords", $scope.Keywords);
			localStorage.setItem("Projlocation", $.trim($("#Serach_joblocation").val()));
			localStorage.setItem("ProjectType", $.trim($("#ProjectType").val()));
			localStorage.setItem("ProjMinBudget", MinBudget);
			localStorage.setItem("ProjMaxBudget", MaxBudget);

			$location.path("\ProjectSearch");
			
		}
		else
		{
			var budget = $.trim($("#Budget").val());
			var MinBudget = 0,
				MaxBudget = 0;
			if (budget == "Less than $500") {
				MinBudget = 0;
				MaxBudget = 500;
			} else if (budget == "$501 to $5000") {
				MinBudget = 501;
				MaxBudget = 5000;
			} else if (budget == "$5001-$10000") {
				MinBudget = 5001;
				MaxBudget = 10000;
			} else if (budget == "Above") {
				MinBudget = 10001;
				MaxBudget = 100000;
			}

			localStorage.setItem("ProjKeywords", $scope.Keywords);
			localStorage.setItem("Projlocation", 'null');
			localStorage.setItem("ProjectType", $.trim($("#ProjectType").val()));
			localStorage.setItem("ProjMinBudget", MinBudget);
			localStorage.setItem("ProjMaxBudget", MaxBudget);
			$location.path("\ProjectSearch");
		}

		/*
			if ($scope.Keywords != "" && $.trim($("#Budget").val()) != "Bidding Amount" && ($("#ProjectType").val() != "" || $.trim($("#ProjectType").val()) != "Assignment Type") && ($("#Serach_joblocation").val() != "")) 
			{
				var budget = $.trim($("#Budget").val());
				var MinBudget = 0,
					MaxBudget = 0;
				if (budget == "Less than $500") {
					MinBudget = 0;
					MaxBudget = 500;
				} else if (budget == "$501 to $5000") {
					MinBudget = 501;
					MaxBudget = 5000;
				} else if (budget == "$5001-$10000") {
					MinBudget = 5001;
					MaxBudget = 10000;
				} else if (budget == "Above") {
					MinBudget = 10001;
					MaxBudget = 100000;
				}

				localStorage.setItem("ProjKeywords", $scope.Keywords);
				localStorage.setItem("Projlocation", $.trim($("#Serach_joblocation").val()));
				localStorage.setItem("ProjectType", $.trim($("#ProjectType").val()));
				localStorage.setItem("ProjMinBudget", MinBudget);
				localStorage.setItem("ProjMaxBudget", MaxBudget);

				$location.path("\ProjectSearch");
			}
			else 
			{
				// $("#projectSearch .input-group, #projectSearch .input-groupp").css('border', '1px solid #8a1f11');
				// $(".SearchProj").effect("shake", { direction: "up", times: 4, distance: 5 }, 1000);
				var x = document.getElementById("snackbar")
				x.innerHTML = "Please enter all data";
				x.className = "show";
				setTimeout(function () {
					x.className = x.className.replace("show", "");
				}, 3000);
			}
		*/
	}
});